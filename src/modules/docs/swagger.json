{
  "openapi": "3.0.0",
  "info": {
    "title": "PIP API",
    "version": "1.0.0",
    "description": "API for PIP",
    "contact": {
      "name": "Ricardo A. Sanjur G.",
      "email": "ricardo@pip.com"
    }
  },

  "tags": [
    {
      "name": "Persons",
      "description": "Operations related to persons"
    },
    {
      "name": "Roles",
      "description": "Operations related to roles"
    },

    {
      "name": "Events",
      "description": "Operations related to events"
    },
    {
      "name": "Files",
      "description": "Operations related to file uploads"
    }
  ],
  "paths": {
    "/api/persons": {
      "get": {
        "tags": ["Persons"],
        "summary": "Get all persons",
        "responses": {
          "200": {
            "description": "A list of persons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Persons"],
        "summary": "Create a person",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Person created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },

    "/api/persons/{id}": {
      "get": {
        "tags": ["Persons"],
        "summary": "Get a person by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A person object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "summary": "Delete a person by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person deleted"
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "summary": "Update a person by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Person updated"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get all roles",
        "responses": {
          "200": {
            "description": "A list of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Roles"],
        "summary": "Create a role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get a role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A role object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Roles"],
        "summary": "Delete a role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted"
          }
        }
      },
      "put": {
        "tags": ["Roles"],
        "summary": "Update a role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role updated"
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": ["Events"],
        "summary": "Get all events",
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Events"],
        "summary": "Create an event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Event created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "tags": ["Events"],
        "summary": "Get an event by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An event object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Events"],
        "summary": "Delete an event by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted"
          }
        }
      },
      "put": {
        "tags": ["Events"],
        "summary": "Update an event by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event updated"
          }
        }
      }
    },
    "/api/files": {
      "get": {
        "tags": ["Files"],
        "summary": "Get all files",
        "responses": {
          "200": {
            "description": "A list of files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Files"],
        "summary": "Create a file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/File"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "File created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": ["Files"],
        "summary": "Get a file by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "put": {
        "tags": ["Files"],
        "summary": "Update a file by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/File"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "delete": {
        "tags": ["Files"],
        "summary": "Delete a file by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "photo": {
            "type": ["string", "null"]
          },
          "fullName": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "alias": {
            "type": ["string", "null"]
          },
          "hobby": {
            "type": ["string", "null"]
          },
          "favoriteFood": {
            "type": ["string", "null"]
          },
          "favoriteDessert": {
            "type": ["string", "null"]
          },
          "favoriteColor": {
            "type": ["string", "null"]
          },
          "dreamAspiration": {
            "type": ["string", "null"]
          },
          "favoriteSerieMovie": {
            "type": ["string", "null"]
          },
          "favoriteMusicGenre": {
            "type": ["string", "null"]
          },
          "favoriteVideoGame": {
            "type": ["string", "null"]
          },
          "message": {
            "type": ["string", "null"]
          },
          "roleId": {
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          }
        }
      },

      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "eventId": {
            "type": "integer"
          }
        }
      }
    }
  }
}
